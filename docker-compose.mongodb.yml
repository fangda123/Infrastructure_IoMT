version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: ${MONGODB_HOSTNAME}
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./services/mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - iomt-network
    restart: unless-stopped
    command: ["--wiredTigerCacheSizeGB", "${MONGO_CACHE_SIZE}", "--bind_ip_all", "--port", "${MONGO_PORT}"]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh ${MONGODB_HOSTNAME}:${MONGO_PORT}/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    hostname: ${MONGO_EXPRESS_HOSTNAME}
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
      - ME_CONFIG_MONGODB_PORT=${MONGO_PORT}
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb
    networks:
      - iomt-network
    restart: unless-stopped

networks:
  iomt-network:
    external: true

volumes:
  mongodb_data:
  mongodb_config: